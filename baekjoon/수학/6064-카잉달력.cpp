/* ----------<문제 정의>----------
문제: 반복문으로 구현 가능한 브루트포스 문제를 문제의 수학적 관계를 통해 시간 개선
입력: m, n, x, y (최대 4만)
케이스 분석
10 12 3 9 -> 1=1:1, 10=10:10, 11=1:11, 12=2:12,13=3:1,20=10:8,21=1:9,24=4:12,25=5:1,30=10:6,31=1:7,33=3:9
*/
/* ----------<접근법>----------
일단 브루트포스로 구현. 예상 복잡도 o(m*n) = 최대 16억❌
*/

#include <iostream>
using namespace std;
int main(){
    int t, m, n, x, y, a = 1, b = 1, cnt = 1;
    cin >> t;
    for(int i = 0; i < t; i++){
        cin >> m >> n >> x >> y;
        // 테스트케이스 마다 초기화
        cnt = 1;
        a = 1;
        b = 1;
        while(1){
            if(a <= m && b <= n){
                a++; b++;
            }
            // 초과하면 초기화
            if(a > m) a = 1;
            if(b > n) b = 1;
            cnt++;
            // 일치 확인
            if(a == x && b == y){
                cout << cnt << '\n';
                break;
            }
            // 끝까지 못 찾을 경우
            if(a == m && b == n){
                cout << -1 << '\n';
                break;
            }
        }
    }
}