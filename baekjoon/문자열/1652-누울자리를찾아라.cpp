/* ----------<문제 정의>----------
문제: 2차원 배열 브루트포스
입력: n(최대 100), 길이 n인 2차원 배열
출력: 가로, 세로 각각 길이 2가 되는 공간의 수
*/
/* ----------<접근법>----------
(n-1)x(n-1)을 순회하면서 .으로 이루어진 길이 2인 공간을 찾는다.
각 점에서 가로, 세로 경우를 모두 파악한다.
*/
#include <iostream>
using namespace std;
int main(){
    int n, hor = 0, ver = 0;
    char a[105][105];
    cin >> n;
    // 2차원 배열 입력
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            cin >> a[i][j];
        }
    }
    // 원소 하나씩 순회하며 가로, 세로 누울 공간 파악
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++){
            if(j < n-1 && a[i][j]=='.' && a[i][j+1]=='.') hor++;    // 가로 공간
            if(i < n-1 && a[i][j]=='.' && a[i+1][j]=='.') ver++;    // 세로 공간
        }
    }
    cout << hor << " " << ver;
}
