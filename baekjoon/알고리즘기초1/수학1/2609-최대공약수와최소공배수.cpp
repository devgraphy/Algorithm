/* ----------<문제 정의>----------
문제:
    - 최대공약수: 공약수 중 가장 큰 것
    - 최소공약수: 두 수의 배수 중 가장 작은 것
입력: 두 개의 자연수(최대 1만)
출력: 최대공약수, 최소공약수 출력
*/
/* ----------<알고리즘>----------
(최대공약수)
    각각 약수 구하기
    공약수 찾기
    공약수 중 가장 큰 것 찾기

(최소공배수)
    약수 합집합
    공약수는 둘 중에 큰 것
*/
#include <iostream>
using namespace std;
int a[10001];
int b[10001];
int main(){
    int n1, n2, temp;
    cin >> n1 >> n2;
    // n1의 약수 구하기
    temp = n1;
    for(int i = 2 ; i <= n1; i++){
        while(temp % i == 0){   // i에 대해 나눠지면 반복 나누기. (안 나누어 떨어지더라도 종료하도록 해야 함)
            a[i] = 1;
            temp/=i;
        }
    }

    // n2의 약수 구하기
    temp = n2;
    for(int i = 2 ; i <= n2; i++){
        while(temp % i == 0){   // i에 대해 나눠지면 반복 나누기. (안 나누어 떨어지더라도 종료하도록 해야 함)
            b[i] = 1;
            temp/=i;
        }
    }

    if(n1 > n2) n1 = n2; // 공약수이므로 더 작은 값부터 공약수가 존재. n1에 더 작은값을 할당
    for(int i = n1; i > 1; i--){
        if(a[i] == 1 && b[i] == 1){
            cout << i;
            break;
        }
    }
}